require 'd13n/support/request_id'

module <%= application_base %>::Api
  class Service < ::Sinatra::Base
    use Rack::RequestId
    set :public_folder, File.join(File.dirname(__FILE__), *%w[.. .. public])
    set :views, File.join(File.dirname(__FILE__), *%w[.. .. views])
    set :show_exceptions, false
    set :logging, true

    before do
      headers 'X-Powered-By' => "<%= application_base %>#{<%= application_base %>::VERSION}"
      headers 'X-Api-Version' => "#{<%= application_base %>::Api::VERSION}"
      D13n::Operation::State.opt_get.request_info = request_info
    end

    get "/" do
      "<%= application_base %>(#{<%= application_base %>::VERSION}:#{<%= application_base %>::Api::VERSION}) Say Hi"
    end

    #TODO refactor format handling
    get "/check" do
      {status: "OK"}.to_json
    end

    get "/config" do
      <%= application_base %>.config.to_collector_hash.to_json
    end

    def request_info
      {
             "host" => request.host,
               "ip" => request.ip,
       "request_id" => env['HTTP_X_REQUEST_ID']
      }
    end
  end
end
